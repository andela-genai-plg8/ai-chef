// Use compiled Bootstrap CSS to avoid compiling the Bootstrap SCSS (which
// emits deprecation warnings). Keep styling here CSS-only so it doesn't
// rely on Bootstrap SCSS variables, mixins or placeholders.
@use "@/styles/mixins" as m;
@import "bootstrap/dist/css/bootstrap.min.css";

/* CSS runtime variables for theming */
:root {
  --bs-primary: #fd7e14;
  --bs-primary-light: #ff8a3a;
  --bs-primary-darker: #e05f12;
  --bs-secondary: #d1c3a1;
  --bs-secondary-dark: #a89876;
  --bs-light: #f8f9fa;
}

/* Use the small mixins module for breakpoint helpers. Components should
  @use this module as `m` to call mixins like `@include m.media-breakpoint-up(...)`. */

/* Primary button override using runtime variables. The !important rules
   make sure we override the compiled Bootstrap rules when needed. */
.btn-primary {
  background: linear-gradient(135deg, var(--bs-primary), var(--bs-primary-light)) !important;
  border: none !important;
  color: #fff !important;

  &:hover {
    background: linear-gradient(45deg, var(--bs-primary-darker), var(--bs-primary)) !important;
  }

  &:focus,
  &:active {
    background: linear-gradient(45deg, var(--bs-primary-darker), var(--bs-primary)) !important;
  }
}

.multiline-truncate {
  /* add standard line-clamp alongside the webkit-prefixed version */
  line-clamp: 4;
  display: -webkit-box;
  -webkit-line-clamp: 4; /* Number of lines to show */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

.text-primary {
  color: var(--bs-primary) !important;
}

.btn-secondary {
  background: linear-gradient(135deg, var(--bs-secondary-dark), var(--bs-secondary)) !important;
  border: none !important;
  color: #fff !important;

  &:hover {
    background: linear-gradient(45deg, var(--bs-secondary-dark), var(--bs-secondary)) !important;
  }

  &:focus,
  &:active {
    background: linear-gradient(45deg, var(--bs-secondary-dark), var(--bs-secondary)) !important;
  }
}

/* Avoid using @extend of Bootstrap utility selectors (these are in compiled
   CSS and not visible to the Sass compiler). Use plain CSS properties here. */
.App {
  display: flex;
  flex-grow: 1;
  align-items: flex-start;
  justify-content: center;
  background-color: var(--bs-light);
  min-height: 100vh;
  width: calc(100vw - 70px);
}

/* Lightweight Bootstrap utility approximations so Sass @extend() can find
   selectors when component SCSS modules use @extend against Bootstrap
   utilities. These are intentionally small and safe: they provide the
   expected layout/spacing but won't conflict with the compiled Bootstrap
   CSS import above. */
.d-flex {
  display: flex !important;
}
.flex-column {
  flex-direction: column !important;
}
.flex-grow-1 {
  flex: 1 1 auto !important;
}
.align-items-center {
  align-items: center !important;
}
.align-items-start {
  align-items: flex-start !important;
}
.justify-content-center {
  justify-content: center !important;
}
.bg-dark {
  background-color: #212529 !important;
}
.bg-light {
  background-color: var(--bs-light) !important;
}
.text-white {
  color: #fff !important;
}
.text-primary {
  color: var(--bs-primary) !important;
}
.text-start {
  text-align: left !important;
}
.img-fluid {
  max-width: 100% !important;
  height: auto !important;
}
.container-fluid {
  width: 100% !important;
}
.px-0 {
  padding-left: 0 !important;
  padding-right: 0 !important;
}
.px-3 {
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}
.p-1 {
  padding: 0.25rem !important;
}
.p-2 {
  padding: 0.5rem !important;
}
.p-3 {
  padding: 1rem !important;
}
.p-md-3 {
  padding: 1rem !important;
}
.py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}
.py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
.py-3 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}
.py-4 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}
.py-lg-5 {
  padding-top: 3rem !important;
  padding-bottom: 3rem !important;
}
.py-sm-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}
.p-md-3 {
  padding: 1rem !important;
}
.py-md-4 {
  padding-top: 1.5rem !important;
  padding-bottom: 1.5rem !important;
}
.mt-3 {
  margin-top: 1rem !important;
}
.mb-2 {
  margin-bottom: 0.5rem !important;
}
.mb-3 {
  margin-bottom: 1rem !important;
}
.me-2 {
  margin-right: 0.5rem !important;
}
.ms-2 {
  margin-left: 0.5rem !important;
}
.me-auto {
  margin-left: auto !important;
}
.ms-auto {
  margin-right: auto !important;
}
.m-0 {
  margin: 0 !important;
}
.m-1 {
  margin: 0.25rem !important;
}
.m-2 {
  margin: 0.5rem !important;
}
.my-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}
.m-3 {
  margin: 1rem !important;
}
.m-4 {
  margin: 1.5rem !important;
}
.mt-0 {
  margin-top: 0 !important;
}
.mt-1 {
  margin-top: 0.25rem !important;
}
.mt-2 {
  margin-top: 0.5rem !important;
}
.mt-3 {
  margin-top: 1rem !important;
}
.mt-4 {
  margin-top: 1.5rem !important;
}
.mb-0 {
  margin-bottom: 0 !important;
}
.mb-1 {
  margin-bottom: 0.25rem !important;
}
.mb-2 {
  margin-bottom: 0.5rem !important;
}
.mb-3 {
  margin-bottom: 1rem !important;
}
.mb-4 {
  margin-bottom: 1.5rem !important;
}
.ms-0 {
  margin-left: 0 !important;
}
.me-0 {
  margin-right: 0 !important;
}
.mx-1 {
  margin-left: 0.25rem !important;
  margin-right: 0.25rem !important;
}
.mx-2 {
  margin-left: 0.5rem !important;
  margin-right: 0.5rem !important;
}
.mx-3 {
  margin-left: 1rem !important;
  margin-right: 1rem !important;
}
.my-1 {
  margin-top: 0.25rem !important;
  margin-bottom: 0.25rem !important;
}
.my-2 {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}
.p-0 {
  padding: 0 !important;
}
.p-1 {
  padding: 0.25rem !important;
}
.p-2 {
  padding: 0.5rem !important;
}
.p-3 {
  padding: 1rem !important;
}
.p-4 {
  padding: 1.5rem !important;
}
.pt-1 {
  padding-top: 0.25rem !important;
}
.pt-2 {
  padding-top: 0.5rem !important;
}
.pb-1 {
  padding-bottom: 0.25rem !important;
}
.pb-2 {
  padding-bottom: 0.5rem !important;
}
.px-1 {
  padding-left: 0.25rem !important;
  padding-right: 0.25rem !important;
}
.px-2 {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
}
.px-3 {
  padding-left: 1rem !important;
  padding-right: 1rem !important;
}
.py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}
.py-2 {
  padding-top: 0.5rem !important;
  padding-bottom: 0.5rem !important;
}
.py-3 {
  padding-top: 1rem !important;
  padding-bottom: 1rem !important;
}
.nav {
  list-style: none;
  padding-left: 0;
  margin-bottom: 0;
}
.nav-pills {
  border-radius: 0.25rem;
}
.nav-item {
  display: block;
}
.nav-link {
  display: block;
  padding: 0.5rem 1rem;
  color: inherit;
  text-decoration: none;
}
.badge {
  display: inline-block;
  padding: 0.25em 0.4em;
  font-size: 75%;
  border-radius: 0.25rem;
}
.bg-secondary {
  background-color: var(--bs-secondary) !important;
}
.text-light {
  color: #f8f9fa !important;
}
.btn {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  padding: 0.375rem 0.75rem;
  border-radius: 0.25rem;
}
.btn-sm {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
}
.btn-outline-primary {
  border: 1px solid var(--bs-primary);
  background: transparent;
  color: var(--bs-primary);
}
.btn-close {
  background: transparent;
  border: 0;
}
.btn-close-white {
  color: #fff;
}
.rounded {
  border-radius: 0.25rem !important;
}
.border {
  border: 1px solid rgba(0, 0, 0, 0.125) !important;
}
.border-1 {
  border-width: 1px !important;
}
.shadow {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
}
.shadow-lg {
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;
}
.w-100 {
  width: 100% !important;
}
.me-auto {
  margin-right: auto !important;
}
.mb-auto {
  margin-bottom: auto !important;
}
.border-0 {
  border: 0 !important;
}
.rounded-0 {
  border-radius: 0 !important;
}
.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.align-self-start {
  align-self: flex-start !important;
}
.align-self-center {
  align-self: center !important;
}
.justify-content-start {
  justify-content: flex-start !important;
}
.justify-content-between {
  justify-content: space-between !important;
}
.justify-content-end {
  justify-content: flex-end !important;
}
.d-none {
  display: none !important;
}
.d-inline {
  display: inline !important;
}
.d-inline-block {
  display: inline-block !important;
}
.me-3 {
  margin-right: 1rem !important;
}
.ms-3 {
  margin-left: 1rem !important;
}
.gap-2 {
  gap: 0.5rem !important;
}
.gap-3 {
  gap: 1rem !important;
}
.text-nowrap {
  white-space: nowrap !important;
}
.overflow-hidden {
  overflow: hidden !important;
}
.float-end {
  float: right !important;
}
.float-start {
  float: left !important;
}
.form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
}
.form-select {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
}
.form-select-sm {
  padding: 0.25rem 0.5rem;
}
.input-group {
  display: flex;
  align-items: stretch;
  width: 100%;
}
.input-group-sm {
  display: flex;
  align-items: stretch;
  width: 100%;
}
.form-control-sm {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
}
.form-control-lg {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
}
.form-control-plaintext {
  background: transparent;
  border: none;
  padding: 0;
}
.form-select-lg {
  padding: 0.5rem 1rem;
}
.badge {
  font-weight: 700;
}
.text-center {
  text-align: center !important;
}
.me-2 {
  margin-right: 0.5rem !important;
}
.btn-primary {
  --bs-keep: 1;
}
.btn-secondary {
  --bs-keep: 1;
}
.multiline-truncate {
  --bs-keep: 1;
}

.PrimaryButton {
  @extend .btn;
  @extend .btn-primary;
  @extend .shadow;
  font-weight: 700;
  padding: 0.5rem 1.5rem;
  font-size: 1.1rem;
  border-radius: 30px !important;
  position: relative;
  z-index: 10;
  transition: transform 0.1s ease, box-shadow 0.1s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
  }

  &:active {
    transform: translateY(1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  &:disabled {
    background: #cccccc !important;
    color: #666666 !important;
    box-shadow: none !important;
    cursor: not-allowed !important;
    transform: none !important;
  }
}

.SecondaryButton {
  @extend .PrimaryButton;
  @extend .btn-secondary;
  padding: 0.45rem 1rem;
  border-radius: 8px;
}

.Rotating {
  animation: rotation 2s infinite linear;
  display: inline-block;
  vertical-align: middle;
  padding: 0px;
  margin: 0px;
  height: 30px;
  width: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Define the rotation keyframes used by the .Rotating class */
@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Honor users who prefer reduced motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  .Rotating {
    animation: none !important;
  }
}

.Clickable {
  cursor: pointer;
}

.MainContent {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: flex-start;
  min-height: 100vh;
}
